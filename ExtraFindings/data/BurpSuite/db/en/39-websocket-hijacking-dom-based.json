{
    "id": 2097984,
    "title": "WebSocket hijacking (DOM-based)",
    "description": [
        "DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.",
        "WebSocket hijacking occurs when a script uses controllable data as the target URL of a WebSocket connection. An attacker may be able to use the vulnerability to construct a URL that, if visited by another application user, will cause the user's browser to open a WebSocket connection to a URL that is under the attacker's control.",
        "The potential impact of the vulnerability depends on the application's usage of WebSockets. If the application transmits sensitive data from the user's browser to the WebSocket server, then the attacker may be able to capture this data. If the application reads data from the WebSocket server and performs processing on this data, then the attacker may be able to subvert the application's logic or deliver additional client-side attacks against the user.",
        "Burp Suite automatically identifies this issue using static code analysis, which may lead to false positives that are not actually exploitable. The relevant code and execution paths should be reviewed to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation."
    ],
    "fix": {
        "effort": 0, 
        "guidance": [
            "The most effective way to avoid DOM-based WebSocket hijacking vulnerabilities is not to dynamically set the target URL of a WebSocket connection using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a target of a WebSocket. In general, this is best achieved by using a whitelist of URLs that are permitted WebSocket targets, and strictly validating the target against this list before creating the WebSocket."
        ]
    },
    "references": [
        {
            "url": "https://portswigger.net/kb/issues/00200340_websocket-hijacking-dom-based",
            "title": "WebSocket hijacking (DOM-based)"
        },
        {
            "url": "https://cwe.mitre.org/data/definitions/345.html",
            "title": "CWE-345: Insufficient Verification of Data Authenticity"
        },
        {
            "url": "https://cwe.mitre.org/data/definitions/346.html",
            "title": "CWE-346: Origin Validation Error"
        },
        {
            "url": "https://cwe.mitre.org/data/definitions/441.html",
            "title": "CWE-441: Unintended Proxy or Intermediary ('Confused Deputy')"
        }
    ],
    "severity": "High",
    "language": "English"
}
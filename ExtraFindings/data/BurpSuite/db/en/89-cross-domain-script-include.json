{
    "id": 5244160,
    "title": "Cross-domain script include",
    "description": [
        "When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.",
        "If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application."
    ],
    "fix": {
        "effort": 0, 
        "guidance": [
            "Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code."
        ]
    },
    "references": [
        {
            "url": "https://portswigger.net/kb/issues/00500500_cross-domain-script-include",
            "title": "Cross-domain script include"
        },
        {
            "url": "https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity",
            "title": "Subresource Integrity"
        },
        {
            "url": "https://cwe.mitre.org/data/definitions/829.html",
            "title": "CWE-829: Inclusion of Functionality from Untrusted Control Sphere"
        }
    ],
    "severity": "Information",
    "language": "English"
}